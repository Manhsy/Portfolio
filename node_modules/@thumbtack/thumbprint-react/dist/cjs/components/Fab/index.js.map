{"version":3,"file":"index.js","sources":["../../../../components/Fab/index.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.scss';\n\ninterface TextFabProps {\n    /**\n     * Children content to render.\n     */\n    children: React.ReactNode;\n    /**\n     * Theme that decides the style of the button.\n     */\n    theme?: 'primary' | 'secondary';\n    /**\n     * Function that will run when the fab is clicked on.\n     */\n    onClick?: () => void;\n    /**\n     * Description of the fab content. It is required if the link contains an icon and no\n     * descriptive text.\n     */\n    accessibilityLabel?: string;\n}\n\nexport function TextFab({\n    children,\n    theme = 'primary',\n    onClick,\n    accessibilityLabel,\n}: TextFabProps): JSX.Element {\n    return (\n        <button\n            className={classNames(styles.root, styles.textFab, {\n                [styles.primary]: theme === 'primary',\n                [styles.secondary]: theme === 'secondary',\n            })}\n            type=\"button\"\n            onClick={onClick}\n            aria-label={accessibilityLabel}\n        >\n            {children}\n        </button>\n    );\n}\n\ninterface IconFabProps {\n    /**\n     * Icon from [Thumbprint Icons](/icons/) to render within the button. It must be one of the\n     * `medium` icons.\n     */\n    icon: React.ReactNode;\n    /**\n     * Theme that decides the style of the button.\n     */\n    theme?: 'primary' | 'secondary';\n    /**\n     * Function that will run when the fab is clicked on.\n     */\n    onClick?: () => void;\n    /**\n     * Description of the fab content. It is required if the link contains an icon and no\n     * descriptive text.\n     */\n    accessibilityLabel?: string;\n}\n\nexport function IconFab({\n    icon,\n    theme = 'primary',\n    onClick,\n    accessibilityLabel,\n}: IconFabProps): JSX.Element {\n    return (\n        <button\n            className={classNames(styles.root, styles.iconFab, {\n                [styles.primary]: theme === 'primary',\n                [styles.secondary]: theme === 'secondary',\n            })}\n            type=\"button\"\n            onClick={onClick}\n            aria-label={accessibilityLabel}\n        >\n            {icon}\n        </button>\n    );\n}\n"],"names":["TextFab","children","theme","onClick","accessibilityLabel","React","classNames","styles","root","textFab","primary","secondary","IconFab","icon","iconFab"],"mappings":";;;;;;;;;;AAwBO,SAASA,OAAT,OAKuB;;;MAJ1BC,QAI0B,QAJ1BA,QAI0B;wBAH1BC,KAG0B;MAH1BA,KAG0B,2BAHlB,SAGkB;MAF1BC,OAE0B,QAF1BA,OAE0B;MAD1BC,kBAC0B,QAD1BA,kBAC0B;SAEtBC;IACI,SAAS,EAAEC,UAAU,CAACC,MAAM,CAACC,IAAR,EAAcD,MAAM,CAACE,OAArB,2EAChBF,MAAM,CAACG,OADS,EACCR,KAAK,KAAK,SADX,yDAEhBK,MAAM,CAACI,SAFS,EAEGT,KAAK,KAAK,WAFb,gBADzB;IAKI,IAAI,EAAC,QALT;IAMI,OAAO,EAAEC,OANb;kBAOgBC;KAEXH,QATL,CADJ;;AAoCJ,AAAO,SAASW,OAAT,QAKuB;;;MAJ1BC,IAI0B,SAJ1BA,IAI0B;0BAH1BX,KAG0B;MAH1BA,KAG0B,4BAHlB,SAGkB;MAF1BC,OAE0B,SAF1BA,OAE0B;MAD1BC,kBAC0B,SAD1BA,kBAC0B;SAEtBC;IACI,SAAS,EAAEC,UAAU,CAACC,MAAM,CAACC,IAAR,EAAcD,MAAM,CAACO,OAArB,6EAChBP,MAAM,CAACG,OADS,EACCR,KAAK,KAAK,SADX,0DAEhBK,MAAM,CAACI,SAFS,EAEGT,KAAK,KAAK,WAFb,iBADzB;IAKI,IAAI,EAAC,QALT;IAMI,OAAO,EAAEC,OANb;kBAOgBC;KAEXS,IATL,CADJ;;;;;;"}