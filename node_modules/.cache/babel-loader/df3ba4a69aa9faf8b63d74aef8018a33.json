{"ast":null,"code":"import React from 'react';\nimport warning from 'warning';\nimport styles from './index.module.scss'; // Components that import `InputRowContext` from this package will have access to this object. They\n// will then be able to know when their component is being used within an `InputRow` as well as\n// whether it is the first of last child.\n\nvar InputRowContext = React.createContext({\n  isWithinInputRow: false,\n  isFirstInputRowChild: false,\n  isLastInputRowChild: false\n});\n\nfunction InputRow(_ref) {\n  var widthRatios = _ref.widthRatios,\n      children = _ref.children,\n      dataTest = _ref.dataTest,\n      dataTestId = _ref.dataTestId;\n  var widthLength = widthRatios && widthRatios.length;\n  var numChildren = React.Children.count(children);\n  warning(!widthLength || widthLength === numChildren, \"The length of prop `width` (\".concat(widthLength, \") must match the number of children (\").concat(numChildren, \") passed to `InputRow`.\"));\n  warning(numChildren > 1, \"The `InputRow` component expects more than one child within the `children` prop. \".concat(numChildren, \" received.\"));\n  return React.createElement(\"div\", {\n    className: styles.root,\n    \"data-test\": dataTest,\n    \"data-testid\": dataTestId\n  }, React.Children.map(children, function (child, i) {\n    return React.createElement(\"div\", {\n      style: {\n        flex: widthRatios ? \"\".concat(widthRatios[i]) : undefined\n      }\n    }, React.createElement(InputRowContext.Provider, {\n      value: {\n        isWithinInputRow: true,\n        isFirstInputRowChild: i === 0,\n        isLastInputRowChild: i + 1 === numChildren\n      }\n    }, child));\n  }));\n}\n\nexport default InputRow;\nexport { InputRowContext };","map":{"version":3,"sources":["../../../../components/InputRow/index.tsx"],"names":["InputRowContext","isWithinInputRow","isFirstInputRowChild","isLastInputRowChild","widthRatios","children","dataTest","dataTestId","widthLength","numChildren","React","warning","styles","flex","undefined","i"],"mappings":";;0CAiCA;;;;AAGA,IAAMA,eAAe,GAAG,KAAK,CAAL,aAAA,CAAoB;AACxCC,EAAAA,gBAAgB,EADwB,KAAA;AAExCC,EAAAA,oBAAoB,EAFoB,KAAA;AAGxCC,EAAAA,mBAAmB,EAAE;AAHmB,CAApB,CAAxB;;AAQe,SAAA,QAAA,CAAA,IAAA,EAKY;MAJvBC,WAIuB,GAAA,IAAA,CAJvBA,W;MACAC,QAGuB,GAAA,IAAA,CAHvBA,Q;MACAC,QAEuB,GAAA,IAAA,CAFvBA,Q;MACAC,UACuB,GAAA,IAAA,CADvBA,U;MAEMC,WAAW,GAAGJ,WAAW,IAAIA,WAAW,CAA9C,M;MACMK,WAAW,GAAGC,KAAK,CAALA,QAAAA,CAAAA,KAAAA,CAApB,QAAoBA,C;AAEpBC,EAAAA,OAAO,CACH,CAAA,WAAA,IAAgBH,WAAW,KADxB,WAAA,EAAA,+BAAA,MAAA,CAAA,WAAA,EAAA,uCAAA,EAAA,MAAA,CAAA,WAAA,EAAPG,yBAAO,CAAA,CAAPA;AAKAA,EAAAA,OAAO,CACHF,WAAW,GADR,CAAA,EAAA,oFAAA,MAAA,CAAA,WAAA,EAAPE,YAAO,CAAA,CAAPA;SAMI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEC,MAAM,CAAtB,IAAA;iBAAA,QAAA;mBAA+DL;AAA/D,GAAA,EACK,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAA,CAAA,EAAA;WAC1B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,IAAI,EAAET,WAAW,GAAA,GAAA,MAAA,CAAMA,WAAW,CAAjB,CAAiB,CAAjB,CAAA,GAAyBU;AAA5C;AAAZ,KAAA,EACI,KAAA,CAAA,aAAA,CAAC,eAAD,CAAA,QAAA,EAAA;AACI,MAAA,KAAK,EAAE;AACHb,QAAAA,gBAAgB,EADb,IAAA;AAEHC,QAAAA,oBAAoB,EAAEa,CAAC,KAFpB,CAAA;AAGHZ,QAAAA,mBAAmB,EAAEY,CAAC,GAADA,CAAAA,KAAUN;AAH5B;AADX,KAAA,EAFsB,KAEtB,CADJ,C;AAHZ,GAES,CADL,C","sourcesContent":["import React from 'react';\nimport warning from 'warning';\nimport styles from './index.module.scss';\n\ninterface PropTypes {\n    /**\n     * Form fields to display.\n     */\n    children: React.ReactNode;\n    /**\n     * An array of numbers (or `null`) that reflect the ratio of the widths of the `children`.\n     *\n     * Examples:\n     *\n     * * `[1, null]`: the first child takes up as much space as possible\n     * * `[1, 1, 1]`: splits the width evenly between three elements\n     * * `[1, 2, 1]`: the first and third child have the same width. The middle child is twice as\n     * wide as its siblings.\n     *\n     * The length of the array should be the same as the number of children.\n     */\n    widthRatios?: (number | null)[];\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     */\n    dataTestId?: string;\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     * @deprecated Deprecated in favor of the `dataTestId` prop\n     */\n    dataTest?: string;\n}\n\n// Components that import `InputRowContext` from this package will have access to this object. They\n// will then be able to know when their component is being used within an `InputRow` as well as\n// whether it is the first of last child.\nconst InputRowContext = React.createContext({\n    isWithinInputRow: false,\n    isFirstInputRowChild: false,\n    isLastInputRowChild: false,\n});\n\nexport { InputRowContext };\n\nexport default function InputRow({\n    widthRatios,\n    children,\n    dataTest,\n    dataTestId,\n}: PropTypes): JSX.Element {\n    const widthLength = widthRatios && widthRatios.length;\n    const numChildren = React.Children.count(children);\n\n    warning(\n        !widthLength || widthLength === numChildren,\n        `The length of prop \\`width\\` (${widthLength}) must match the number of children (${numChildren}) passed to \\`InputRow\\`.`,\n    );\n\n    warning(\n        numChildren > 1,\n        `The \\`InputRow\\` component expects more than one child within the \\`children\\` prop. ${numChildren} received.`,\n    );\n\n    return (\n        <div className={styles.root} data-test={dataTest} data-testid={dataTestId}>\n            {React.Children.map(children, (child, i) => (\n                <div style={{ flex: widthRatios ? `${widthRatios[i]}` : undefined }}>\n                    <InputRowContext.Provider\n                        value={{\n                            isWithinInputRow: true,\n                            isFirstInputRowChild: i === 0,\n                            isLastInputRowChild: i + 1 === numChildren,\n                        }}\n                    >\n                        {child}\n                    </InputRowContext.Provider>\n                </div>\n            ))}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}