{"ast":null,"code":"/**\n * Enable plain and themed `<button>` elements to share the same props.\n */\nvar getButtonProps = function getButtonProps(_ref) {\n  var onClick = _ref.onClick,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseOver = _ref.onMouseOver,\n      onFocus = _ref.onFocus,\n      onMouseLeave = _ref.onMouseLeave,\n      onBlur = _ref.onBlur;\n  return {\n    onClick: onClick,\n    type: type,\n    onMouseEnter: onMouseEnter,\n    onMouseOver: onMouseOver,\n    onFocus: onFocus,\n    onMouseLeave: onMouseLeave,\n    onBlur: onBlur\n  };\n};\n\nexport default getButtonProps;","map":{"version":3,"sources":["../../../../components/UIAction/get-button-props.ts"],"names":["getButtonProps","onClick","type","onMouseEnter","onMouseOver","onFocus","onMouseLeave","onBlur"],"mappings":"AAUA;;;AAGA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAAA;MACnBC,OADmB,GAAA,IAAA,CAAA,O;uBAAA,I;MAEnBC,IAFmB,GAAA,SAAA,KAAA,KAAA,CAAA,GAAA,QAAA,GAAA,S;MAGnBC,YAHmB,GAAA,IAAA,CAAA,Y;MAInBC,WAJmB,GAAA,IAAA,CAAA,W;MAKnBC,OALmB,GAAA,IAAA,CAAA,O;MAMnBC,YANmB,GAAA,IAAA,CAAA,Y;MAOnBC,MAPmB,GAAA,IAAA,CAAA,M;SAQU;AAC7BN,IAAAA,OAAO,EADsB,OAAA;AAE7BC,IAAAA,IAAI,EAFyB,IAAA;AAG7BC,IAAAA,YAAY,EAHiB,YAAA;AAI7BC,IAAAA,WAAW,EAJkB,WAAA;AAK7BC,IAAAA,OAAO,EALsB,OAAA;AAM7BC,IAAAA,YAAY,EANiB,YAAA;AAO7BC,IAAAA,MAAM,EAANA;AAP6B,G;AARjC,CAAA","sourcesContent":["interface ButtonProps {\n    type: 'button' | 'submit';\n    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    onMouseEnter?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    onMouseOver?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    onMouseLeave?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    onFocus?: (event: React.FocusEvent<HTMLButtonElement>) => void;\n    onBlur?: (event: React.FocusEvent<HTMLButtonElement>) => void;\n}\n\n/**\n * Enable plain and themed `<button>` elements to share the same props.\n */\nconst getButtonProps = ({\n    onClick,\n    type = 'button',\n    onMouseEnter,\n    onMouseOver,\n    onFocus,\n    onMouseLeave,\n    onBlur,\n}: ButtonProps): ButtonProps => ({\n    onClick,\n    type,\n    onMouseEnter,\n    onMouseOver,\n    onFocus,\n    onMouseLeave,\n    onBlur,\n});\n\nexport default getButtonProps;\n"]},"metadata":{},"sourceType":"module"}