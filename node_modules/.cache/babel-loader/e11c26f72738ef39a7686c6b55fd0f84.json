{"ast":null,"code":"import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.scss';\n\nfunction HorizontalRule(_ref) {\n  var _classNames;\n\n  var _ref$lineStyle = _ref.lineStyle,\n      lineStyle = _ref$lineStyle === void 0 ? 'solid' : _ref$lineStyle,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'gray' : _ref$color;\n  return React.createElement(\"hr\", {\n    className: classNames((_classNames = {}, _defineProperty(_classNames, styles.root, true), _defineProperty(_classNames, styles.gray300, color === 'gray-300'), _defineProperty(_classNames, styles.dashed, lineStyle === 'dashed'), _defineProperty(_classNames, styles.dotted, lineStyle === 'dotted'), _classNames))\n  });\n}\n\nexport default HorizontalRule;","map":{"version":3,"sources":["../../../../components/HorizontalRule/index.tsx"],"names":["lineStyle","color","classNames","styles"],"mappings":";;;;;AAee,SAAA,cAAA,CAAA,IAAA,EAGY;;;4BAFvBA,S;MAAAA,SAEuB,GAAA,cAAA,KAAA,KAAA,CAAA,GAFX,OAEW,GAAA,c;wBADvBC,K;MAAAA,KACuB,GAAA,UAAA,KAAA,KAAA,CAAA,GADf,MACe,GAAA,U;SAEnB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACI,IAAA,SAAS,EAAEC,UAAU,EAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAChBC,MAAM,CADU,IAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAEhBA,MAAM,CAFU,OAAA,EAECF,KAAK,KAFN,UAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAGhBE,MAAM,CAHU,MAAA,EAGAH,SAAS,KAHT,QAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAIhBG,MAAM,CAJU,MAAA,EAIAH,SAAS,KAJT,QAAA,CAAA,EAAA,WAAA;AADzB,GAAA,C","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.scss';\n\ninterface PropTypes {\n    /**\n     * Controls the style of the line rendered for the horizontal rule.\n     */\n    lineStyle?: 'solid' | 'dotted' | 'dashed';\n    /**\n     * Controls the color of the line rendered for the horizontal rule.\n     */\n    color?: 'gray' | 'gray-300';\n}\n\nexport default function HorizontalRule({\n    lineStyle = 'solid',\n    color = 'gray',\n}: PropTypes): JSX.Element {\n    return (\n        <hr\n            className={classNames({\n                [styles.root]: true,\n                [styles.gray300]: color === 'gray-300',\n                [styles.dashed]: lineStyle === 'dashed',\n                [styles.dotted]: lineStyle === 'dotted',\n            })}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}