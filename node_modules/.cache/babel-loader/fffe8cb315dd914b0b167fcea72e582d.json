{"ast":null,"code":"import { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { tpColorRed, tpColorGray, tpColorWhite, tpColorGray300, tpColorBlue, tpColorGray200 } from '@thumbtack/thumbprint-tokens';\nimport warning from 'warning';\nimport styles from './index.module.scss';\nvar labelCursor = {\n  error: 'pointer',\n  disabled: 'default',\n  default: 'pointer'\n};\nvar color = {\n  error: {\n    unchecked: tpColorRed,\n    checked: tpColorRed,\n    indeterminate: tpColorRed\n  },\n  disabled: {\n    unchecked: tpColorGray,\n    checked: tpColorGray,\n    indeterminate: tpColorGray\n  },\n  default: {\n    unchecked: 'inherit',\n    checked: tpColorWhite,\n    indeterminate: tpColorWhite\n  }\n};\nvar borderColor = {\n  error: {\n    unchecked: tpColorRed,\n    checked: tpColorRed,\n    indeterminate: tpColorRed\n  },\n  disabled: {\n    unchecked: tpColorGray300,\n    checked: tpColorGray300,\n    indeterminate: tpColorGray300\n  },\n  default: {\n    unchecked: tpColorGray,\n    checked: tpColorBlue,\n    indeterminate: tpColorBlue\n  }\n};\nvar backgroundColor = {\n  error: {\n    unchecked: tpColorWhite,\n    checked: tpColorWhite,\n    indeterminate: tpColorWhite\n  },\n  disabled: {\n    unchecked: tpColorGray200,\n    checked: tpColorGray200,\n    indeterminate: tpColorGray200\n  },\n  default: {\n    unchecked: tpColorWhite,\n    checked: tpColorBlue,\n    indeterminate: tpColorBlue\n  }\n};\nvar textColor = {\n  error: tpColorRed,\n  disabled: tpColorGray,\n  default: 'inherit'\n};\n\nvar getCheckedState = function getCheckedState(_ref) {\n  var isChecked = _ref.isChecked,\n      isIndeterminate = _ref.isIndeterminate;\n\n  if (isChecked) {\n    return 'checked';\n  }\n\n  if (isIndeterminate) {\n    return 'indeterminate';\n  }\n\n  return 'unchecked';\n};\n\nvar getFunctionalState = function getFunctionalState(_ref2) {\n  var isDisabled = _ref2.isDisabled,\n      hasError = _ref2.hasError;\n\n  if (isDisabled) {\n    return 'disabled';\n  }\n\n  if (hasError) {\n    return 'error';\n  }\n\n  return 'default';\n};\n\nfunction Checkbox(_ref3) {\n  var _classNames;\n\n  var _ref3$checkboxVertica = _ref3.checkboxVerticalAlign,\n      checkboxVerticalAlign = _ref3$checkboxVertica === void 0 ? 'center' : _ref3$checkboxVertica,\n      children = _ref3.children,\n      dataTest = _ref3.dataTest,\n      dataTestId = _ref3.dataTestId,\n      _ref3$hasError = _ref3.hasError,\n      hasError = _ref3$hasError === void 0 ? false : _ref3$hasError,\n      id = _ref3.id,\n      _ref3$isChecked = _ref3.isChecked,\n      isChecked = _ref3$isChecked === void 0 ? false : _ref3$isChecked,\n      _ref3$isDisabled = _ref3.isDisabled,\n      isDisabled = _ref3$isDisabled === void 0 ? false : _ref3$isDisabled,\n      _ref3$isIndeterminate = _ref3.isIndeterminate,\n      isIndeterminate = _ref3$isIndeterminate === void 0 ? false : _ref3$isIndeterminate,\n      _ref3$labelPadding = _ref3.labelPadding,\n      labelPadding = _ref3$labelPadding === void 0 ? '14px 0' : _ref3$labelPadding,\n      _ref3$isRequired = _ref3.isRequired,\n      isRequired = _ref3$isRequired === void 0 ? false : _ref3$isRequired,\n      name = _ref3.name,\n      _onChange = _ref3.onChange,\n      value = _ref3.value;\n  var functionalState = getFunctionalState({\n    isDisabled: isDisabled,\n    hasError: hasError\n  });\n  var checkedState = getCheckedState({\n    isChecked: isChecked,\n    isIndeterminate: isIndeterminate\n  });\n  warning(children || id, 'If `children` is not provided to `Checkbox`, the `id` prop must be used to link the `Checkbox` to a `label` element.'); // React adds a `value` attribute (`value=\"\"`) to `input[type=\"checkbox\"]` even if the `value`\n  // prop is `undefined`. This prevents the default browser behavior of `value=\"on\"` when the\n  // `value` attribute is omitted. We can work around the React behavior and avoid adding\n  // `value=\"\"` to the DOM by conditionally creating an object that we then spread onto the\n  // element. More context: https://github.com/thumbtack/thumbprint/issues/589\n\n  var valuePropObject = value ? {\n    value: value\n  } : {};\n  return (// eslint-disable-next-line jsx-a11y/label-has-associated-control, jsx-a11y/label-has-for\n    React.createElement(\"label\", {\n      className: classNames(styles.root, (_classNames = {}, _defineProperty(_classNames, styles.rootCheckboxVerticalAlignTop, checkboxVerticalAlign === 'top'), _defineProperty(_classNames, styles.rootCheckboxVerticalAlignCenter, checkboxVerticalAlign === 'center'), _classNames)),\n      style: {\n        cursor: labelCursor[functionalState],\n        padding: labelPadding\n      }\n    }, React.createElement(\"input\", _extends({\n      className: styles.input,\n      \"aria-checked\": isIndeterminate ? 'mixed' : isChecked,\n      \"data-testid\": dataTestId,\n      \"data-test\": dataTest,\n      type: \"checkbox\",\n      id: id,\n      name: name,\n      checked: isChecked,\n      onChange: function onChange(event) {\n        return _onChange(event.target.checked, id);\n      },\n      disabled: isDisabled,\n      required: isRequired\n    }, valuePropObject)), React.createElement(\"div\", {\n      className: styles.checkboxImage,\n      style: {\n        color: color[functionalState][checkedState],\n        backgroundColor: backgroundColor[functionalState][checkedState],\n        borderColor: borderColor[functionalState][checkedState]\n      }\n    }, isChecked && !isIndeterminate && React.createElement(\"svg\", {\n      width: \"18\",\n      height: \"18\",\n      viewBox: \"0 0 18 18\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, React.createElement(\"rect\", {\n      x: \"15.232\",\n      y: \"4.003\",\n      width: \"11.701\",\n      height: \"1.879\",\n      rx: \".939\",\n      transform: \"rotate(123 15.232 4.003)\"\n    }), React.createElement(\"rect\", {\n      x: \"8.83\",\n      y: \"13.822\",\n      width: \"7.337\",\n      height: \"1.879\",\n      rx: \".939\",\n      transform: \"rotate(-146 8.83 13.822)\"\n    }), React.createElement(\"path\", {\n      d: \"M8.072 13.306l1.03-1.586.787.512-1.03 1.586z\"\n    })), isIndeterminate && React.createElement(\"svg\", {\n      width: \"10\",\n      height: \"2\",\n      viewBox: \"0 0 10 2\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, React.createElement(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: \"10\",\n      height: \"2\"\n    }))), children && React.createElement(\"span\", {\n      style: {\n        color: textColor[functionalState]\n      },\n      className: styles.text\n    }, children))\n  );\n}\n\nexport default Checkbox;","map":{"version":3,"sources":["../../../../components/Checkbox/index.tsx"],"names":["labelCursor","error","disabled","default","color","unchecked","checked","indeterminate","tokens","borderColor","backgroundColor","textColor","getCheckedState","isChecked","isIndeterminate","getFunctionalState","isDisabled","hasError","checkboxVerticalAlign","children","dataTest","dataTestId","id","labelPadding","isRequired","name","onChange","value","functionalState","checkedState","warning","valuePropObject","classNames","styles","cursor","padding","event","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport * as tokens from '@thumbtack/thumbprint-tokens';\nimport warning from 'warning';\nimport styles from './index.module.scss';\n\nconst labelCursor = {\n    error: 'pointer',\n    disabled: 'default',\n    default: 'pointer',\n};\n\nconst color = {\n    error: {\n        unchecked: tokens.tpColorRed,\n        checked: tokens.tpColorRed,\n        indeterminate: tokens.tpColorRed,\n    },\n    disabled: {\n        unchecked: tokens.tpColorGray,\n        checked: tokens.tpColorGray,\n        indeterminate: tokens.tpColorGray,\n    },\n    default: {\n        unchecked: 'inherit',\n        checked: tokens.tpColorWhite,\n        indeterminate: tokens.tpColorWhite,\n    },\n};\n\nconst borderColor = {\n    error: {\n        unchecked: tokens.tpColorRed,\n        checked: tokens.tpColorRed,\n        indeterminate: tokens.tpColorRed,\n    },\n    disabled: {\n        unchecked: tokens.tpColorGray300,\n        checked: tokens.tpColorGray300,\n        indeterminate: tokens.tpColorGray300,\n    },\n    default: {\n        unchecked: tokens.tpColorGray,\n        checked: tokens.tpColorBlue,\n        indeterminate: tokens.tpColorBlue,\n    },\n};\n\nconst backgroundColor = {\n    error: {\n        unchecked: tokens.tpColorWhite,\n        checked: tokens.tpColorWhite,\n        indeterminate: tokens.tpColorWhite,\n    },\n    disabled: {\n        unchecked: tokens.tpColorGray200,\n        checked: tokens.tpColorGray200,\n        indeterminate: tokens.tpColorGray200,\n    },\n    default: {\n        unchecked: tokens.tpColorWhite,\n        checked: tokens.tpColorBlue,\n        indeterminate: tokens.tpColorBlue,\n    },\n};\n\nconst textColor = {\n    error: tokens.tpColorRed,\n    disabled: tokens.tpColorGray,\n    default: 'inherit',\n};\n\ntype CheckedState = 'checked' | 'indeterminate' | 'unchecked';\ntype FunctionalState = 'disabled' | 'error' | 'default';\n\nconst getCheckedState = ({\n    isChecked,\n    isIndeterminate,\n}: Pick<PropTypes, 'isChecked' | 'isIndeterminate'>): CheckedState => {\n    if (isChecked) {\n        return 'checked';\n    }\n\n    if (isIndeterminate) {\n        return 'indeterminate';\n    }\n\n    return 'unchecked';\n};\n\nconst getFunctionalState = ({\n    isDisabled,\n    hasError,\n}: Pick<PropTypes, 'isDisabled' | 'hasError'>): FunctionalState => {\n    if (isDisabled) {\n        return 'disabled';\n    }\n\n    if (hasError) {\n        return 'error';\n    }\n\n    return 'default';\n};\n\ninterface PropTypes {\n    /**\n     * Disables the input and the label.\n     */\n    isDisabled?: boolean;\n    /**\n     * Determines if the checkbox is checked.\n     */\n    isChecked?: boolean;\n    /**\n     * Makes the radio and text color red.\n     */\n    hasError?: boolean;\n    /**\n     * Text or elements that appear within the label. If `children` is not provided, the developer\n     * must use the `Radio`'s `id` prop to associate it with a custom `<label>` element.\n     */\n    children?: React.ReactNode;\n    /**\n     * The `id` is added to the checkbox as an HTML attribute and passed to the `onChange`\n     * function.\n     */\n    id?: string;\n    /**\n     * Adds the `required` HTML attribute.\n     */\n    isRequired?: boolean;\n    /**\n     * Checkboxes on a page with the same name will be grouped together when sent to the server.\n     * The browser will only send the value of checkboxes that are checked.\n     */\n    name?: string;\n    /**\n     * Determine that padding that gets applied to the label. This can be used\n     * to increase the label's click target. The value supplied should be a\n     * string with a unit such as `8px` or `8px 16px`.\n     */\n    labelPadding?: string;\n    /**\n     * Function that runs when a checkbox value changes. It receives the new boolean value and\n     * the provided `id` as such: `props.onChange(e.target.checked, props.id)`.\n     */\n    onChange: (value: boolean, id?: string) => void;\n    /**\n     * Shows a horizontal line to represent an indeterminate input.\n     */\n    isIndeterminate?: boolean;\n    /**\n     * A selector hook into the React component for use in automated testing environments. It is\n     * applied internally to the `<input />` element.\n     */\n    dataTestId?: string;\n    /**\n     * A selector hook into the React component for use in automated testing environments. It is\n     * applied internally to the `<input />` element.\n     * @deprecated Deprecated in favor of the `dataTestId` prop\n     */\n    dataTest?: string;\n    /**\n     * Determines how the checkbox input will be vertically aligned relative to `props.children`.\n     */\n    checkboxVerticalAlign?: 'top' | 'center';\n    /**\n     * Determines the value that will be submitted if the checkbox is checked. The default value is\n     * `'on'`.\n     */\n    value?: string | string[] | number;\n}\n\nexport default function Checkbox({\n    checkboxVerticalAlign = 'center',\n    children,\n    dataTest,\n    dataTestId,\n    hasError = false,\n    id,\n    isChecked = false,\n    isDisabled = false,\n    isIndeterminate = false,\n    labelPadding = '14px 0',\n    isRequired = false,\n    name,\n    onChange,\n    value,\n}: PropTypes): JSX.Element {\n    const functionalState = getFunctionalState({ isDisabled, hasError });\n    const checkedState = getCheckedState({ isChecked, isIndeterminate });\n\n    warning(\n        children || id,\n        'If `children` is not provided to `Checkbox`, the `id` prop must be used to link the `Checkbox` to a `label` element.',\n    );\n\n    // React adds a `value` attribute (`value=\"\"`) to `input[type=\"checkbox\"]` even if the `value`\n    // prop is `undefined`. This prevents the default browser behavior of `value=\"on\"` when the\n    // `value` attribute is omitted. We can work around the React behavior and avoid adding\n    // `value=\"\"` to the DOM by conditionally creating an object that we then spread onto the\n    // element. More context: https://github.com/thumbtack/thumbprint/issues/589\n    const valuePropObject = value ? { value } : {};\n\n    return (\n        // eslint-disable-next-line jsx-a11y/label-has-associated-control, jsx-a11y/label-has-for\n        <label\n            className={classNames(styles.root, {\n                [styles.rootCheckboxVerticalAlignTop]: checkboxVerticalAlign === 'top',\n                [styles.rootCheckboxVerticalAlignCenter]: checkboxVerticalAlign === 'center',\n            })}\n            style={{ cursor: labelCursor[functionalState], padding: labelPadding }}\n        >\n            <input\n                className={styles.input}\n                aria-checked={isIndeterminate ? 'mixed' : isChecked}\n                data-testid={dataTestId}\n                data-test={dataTest}\n                type=\"checkbox\"\n                id={id}\n                name={name}\n                checked={isChecked}\n                onChange={(event): void => onChange(event.target.checked, id)}\n                disabled={isDisabled}\n                required={isRequired}\n                {...valuePropObject}\n            />\n\n            <div\n                className={styles.checkboxImage}\n                style={{\n                    color: color[functionalState][checkedState],\n                    backgroundColor: backgroundColor[functionalState][checkedState],\n                    borderColor: borderColor[functionalState][checkedState],\n                }}\n            >\n                {isChecked && !isIndeterminate && (\n                    <svg\n                        width=\"18\"\n                        height=\"18\"\n                        viewBox=\"0 0 18 18\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <rect\n                            x=\"15.232\"\n                            y=\"4.003\"\n                            width=\"11.701\"\n                            height=\"1.879\"\n                            rx=\".939\"\n                            transform=\"rotate(123 15.232 4.003)\"\n                        />\n                        <rect\n                            x=\"8.83\"\n                            y=\"13.822\"\n                            width=\"7.337\"\n                            height=\"1.879\"\n                            rx=\".939\"\n                            transform=\"rotate(-146 8.83 13.822)\"\n                        />\n                        <path d=\"M8.072 13.306l1.03-1.586.787.512-1.03 1.586z\" />\n                    </svg>\n                )}\n                {isIndeterminate && (\n                    <svg\n                        width=\"10\"\n                        height=\"2\"\n                        viewBox=\"0 0 10 2\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" />\n                    </svg>\n                )}\n            </div>\n\n            {children && (\n                <span style={{ color: textColor[functionalState] }} className={styles.text}>\n                    {children}\n                </span>\n            )}\n        </label>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}