{"ast":null,"code":"import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React from 'react';\nimport classNames from 'classnames';\nimport '../../icons/alert-check.js';\nimport '../../icons/alert-info.js';\nimport '../../icons/alert-warning.js';\nimport BlockedFilled from '../../icons/blocked-filled.js';\nimport InfoFilled from '../../icons/info-filled.js';\nimport WarningFilled from '../../icons/warning-filled.js';\nimport styles from './index.module.scss';\nvar ALERT_ICONS = {\n  // Icon names map to the icon name in Thumbprint, not the theme prop\n  caution: React.createElement(WarningFilled, {\n    className: styles.icon\n  }),\n  info: React.createElement(InfoFilled, {\n    className: styles.icon\n  }),\n  warning: React.createElement(BlockedFilled, {\n    className: styles.icon\n  })\n};\n\nfunction AlertBanner(_ref) {\n  var _classNames;\n\n  var children = _ref.children,\n      theme = _ref.theme,\n      dataTestId = _ref.dataTestId,\n      dataTest = _ref.dataTest;\n  return React.createElement(\"div\", {\n    className: classNames((_classNames = {}, _defineProperty(_classNames, styles.root, true), _defineProperty(_classNames, styles.caution, theme === 'caution'), _defineProperty(_classNames, styles.info, theme === 'info'), _defineProperty(_classNames, styles.warning, theme === 'warning'), _classNames)),\n    \"data-testid\": dataTestId,\n    \"data-test\": dataTest\n  }, ALERT_ICONS[theme], React.createElement(\"div\", null, children));\n}\n\nexport default AlertBanner;","map":{"version":3,"sources":["../../../../components/AlertBanner/index.tsx"],"names":["ALERT_ICONS","caution","styles","icon","info","warning","children","theme","dataTestId","dataTest","classNames"],"mappings":";;;;;;;;;;AAyBA,IAAMA,WAAW,GAAG;;AAEhBC,EAAAA,OAAO,EAAE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,IAAA,SAAS,EAAEC,MAAM,CAACC;AAAjC,GAAA,CAFO;AAGhBC,EAAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,IAAA,SAAS,EAAEF,MAAM,CAACC;AAA9B,GAAA,CAHU;AAIhBE,EAAAA,OAAO,EAAE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,IAAA,SAAS,EAAEH,MAAM,CAACC;AAAjC,GAAA;AAJO,CAApB;;AAMe,SAAA,WAAA,CAAA,IAAA,EAKuB;;;MAJlCG,QAIkC,GAAA,IAAA,CAJlCA,Q;MACAC,KAGkC,GAAA,IAAA,CAHlCA,K;MACAC,UAEkC,GAAA,IAAA,CAFlCA,U;MACAC,QACkC,GAAA,IAAA,CADlCA,Q;SAGI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACI,IAAA,SAAS,EAAEC,UAAU,EAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAChBR,MAAM,CADU,IAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAEhBA,MAAM,CAFU,OAAA,EAECK,KAAK,KAFN,SAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAGhBL,MAAM,CAHU,IAAA,EAGFK,KAAK,KAHH,MAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAIhBL,MAAM,CAJU,OAAA,EAICK,KAAK,KAJN,SAAA,CAAA,EADzB,WACyB,EADzB;mBAAA,UAAA;iBAQeE;AARf,GAAA,EAUKT,WAAW,CAVhB,KAUgB,CAVhB,EAWI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAZR,QAYQ,CAXJ,C","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.scss';\nimport { BlockedFilled, InfoFilled, WarningFilled } from '../../icons';\n\ninterface AlertBannerPropTypes {\n    /**\n     * Text within the alert\n     */\n    children: React.ReactNode;\n    /**\n     * Determines the background color and text color of the component\n     */\n    theme: 'info' | 'warning' | 'caution';\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     */\n    dataTestId?: string;\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     * @deprecated Deprecated in favor of the `dataTestId` prop\n     */\n    dataTest?: string;\n}\n\nconst ALERT_ICONS = {\n    // Icon names map to the icon name in Thumbprint, not the theme prop\n    caution: <WarningFilled className={styles.icon} />,\n    info: <InfoFilled className={styles.icon} />,\n    warning: <BlockedFilled className={styles.icon} />,\n};\nexport default function AlertBanner({\n    children,\n    theme,\n    dataTestId,\n    dataTest,\n}: AlertBannerPropTypes): JSX.Element {\n    return (\n        <div\n            className={classNames({\n                [styles.root]: true,\n                [styles.caution]: theme === 'caution',\n                [styles.info]: theme === 'info',\n                [styles.warning]: theme === 'warning',\n            })}\n            data-testid={dataTestId}\n            data-test={dataTest}\n        >\n            {ALERT_ICONS[theme]}\n            <div>{children}</div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}