{"ast":null,"code":"/**\n * Given a DOM node, this function will find the element's scrollable parent.\n *\n * It is adapted from:\n * https://stackoverflow.com/a/42543908/316602\n */\nfunction getScrollParent(element) {\n  var style = getComputedStyle(element);\n  var excludeStaticParent = style.position === 'absolute';\n  var overflowRegex = /(auto|scroll)/;\n  if (style.position === 'fixed') return document.body; // eslint-disable-next-line no-cond-assign\n\n  for (var parent = element; parent = parent.parentElement;) {\n    style = getComputedStyle(parent);\n\n    if (excludeStaticParent && style.position === 'static') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (overflowRegex.test(style.overflow + style.overflowY + style.overflowX)) return parent;\n  }\n\n  return document.body;\n}\n\nexport default getScrollParent;","map":{"version":3,"sources":["../../../../components/Image/get-scroll-parent.ts"],"names":["style","getComputedStyle","excludeStaticParent","overflowRegex","document","parent"],"mappings":"AAAA;;;;;;AAMe,SAAA,eAAA,CAAA,OAAA,EAAoD;MAC3DA,KAAK,GAAGC,gBAAgB,CAA5B,OAA4B,C;MACtBC,mBAAmB,GAAGF,KAAK,CAALA,QAAAA,KAA5B,U;MACMG,aAAa,GAAnB,e;MAEIH,KAAK,CAALA,QAAAA,KAAJ,O,EAAgC,OAAOI,QAAQ,CALgB,IAK/B,CAL+B,CAAA;;OAQ1D,IAAIC,MAAsB,GAA/B,O,EAA4CA,MAAM,GAAGA,MAAM,CAA3D,a,GAA8E;AAC1EL,IAAAA,KAAK,GAAGC,gBAAgB,CAAxBD,MAAwB,CAAxBA;;QACIE,mBAAmB,IAAIF,KAAK,CAALA,QAAAA,KAA3B,Q,EAAwD;;;;;QAIpDG,aAAa,CAAbA,IAAAA,CAAmBH,KAAK,CAALA,QAAAA,GAAiBA,KAAK,CAAtBA,SAAAA,GAAmCA,KAAK,CAA/D,SAAIG,C,EAAwE,OAAA,MAAA;;;SAGzEC,QAAQ,CAAf,I","sourcesContent":["/**\n * Given a DOM node, this function will find the element's scrollable parent.\n *\n * It is adapted from:\n * https://stackoverflow.com/a/42543908/316602\n */\nexport default function getScrollParent(element: Element): Element {\n    let style = getComputedStyle(element);\n    const excludeStaticParent = style.position === 'absolute';\n    const overflowRegex = /(auto|scroll)/;\n\n    if (style.position === 'fixed') return document.body;\n\n    // eslint-disable-next-line no-cond-assign\n    for (let parent: Element | null = element; (parent = parent.parentElement); ) {\n        style = getComputedStyle(parent);\n        if (excludeStaticParent && style.position === 'static') {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        if (overflowRegex.test(style.overflow + style.overflowY + style.overflowX)) return parent;\n    }\n\n    return document.body;\n}\n"]},"metadata":{},"sourceType":"module"}